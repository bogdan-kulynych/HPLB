
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Warning message:
In libPIns(xLib2, beforeLib = .Library, msgTxt = paste("for Fedora",  :
  .libPaths() contains no entries matching ‘/usr/local64.sfs/app/R/R-3.6.1-inst/library’
> # POSTPROCESS 1
> # type: producing plots for the loglog scatter plot of sample size against tv
> 
> # PATHS
> PATH.DATA <- "../Data/"
> PATH.PLOTS <- "../Plots/"
> load(paste0(PATH.DATA, "DATA_SIMULATION_1_new.Rdata"))
> 
> # libs
> require(data.table)
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:sfsmisc’:

    last

> 
> 
> colfunc <- colorRampPalette(c("black", "white"))
> cols = rev(colfunc(length(seq(-0.1,1.1,0.1))))
> print(cut(power.table$power_search, labels = FALSE, breaks = seq(-0.1,1.1,0.1)))
 [1] 11 11 11 11 11 11 11 11 11 11 11 11  7 11 11 11  2 11 11 11  1  5 11 11  1
[26]  2  5 11  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
> 		 
> # loglogplot
> png(filename = paste0(PATH.PLOTS,"PLOT_SIMULATION_1.png"))
> par(mfrow=c(2,2))
> plot(power.table$logn,power.table$loglambda,
+      col = cols[cut(power.table$power_search, labels = FALSE, breaks = seq(-0.1,1.1,0.1))],
+      pch=19,xlab="log(n)",
+      ylab="-gamma*log(n)")
> plot(power.table$logn,power.table$loglambda,
+      col = cols[cut(power.table$power_binomial, labels = FALSE, breaks = seq(-0.1,1.1,0.1))],
+      pch=19,xlab="log(n)",
+      ylab="-gamma*log(n)")
> plot(seq(-0.1,1.1,0.1), rep(1, length(seq(-0.1,1.1,0.1))), col=cols,pch=19,cex=3)
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  0.972   0.163   3.735 
